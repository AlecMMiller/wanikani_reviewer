{"version":3,"sources":["Pages/Login.js","Widgets/ConfigField.js","Pages/Home.js","Widgets/Messages.js","Pages/Loading.js","Requests.js","Wanikani.js","Pages.js","Widgets/HiraganaIme.js","Pages/Review.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","props","checkLogin","bind","api_key","document","getElementById","value","this","className","type","id","onClick","href","target","Component","NumberConfigField","event","handleChange","newValue","setDefault","onChange","Cookies","set","cookie","get","defaultValue","title","getDefault","HomePage","logout","startReview","updateDaysToReview","updatePercentThreshold","greeting","hours","Date","getHours","getGreeting","state","days_to_review","percent_threshold","percent","days","start","setState","name","description","LoadingPage","makeUrl","url_end","params","obj","url","Object","keys","map","key","join","makeAuthorization","token","getRequestRecursive","cb","a","previous_data","fetch","method","headers","response","ok","json","pages","data","next_page","next_url","concat","getRecursivePromise","getFetchPromise","apiToken","username","compareLeeches","b","ranker","target_date","setTime","getTime","arg_date","toISOString","updated_after","subject_types","percentages_less_than","leeches","review_number","review_data","current_meaning","meaning_current_streak","current_reading","reading_current_streak","current_percent","percentage_correct","Math","min","leech","subject_id","push","sort","GetSubject","review_id","PAGES","login","config","loading","reviewing","one_character_hiragana","two_character_hiragana","three_character_hiragana","JapaneseInput","handleInput","inputValue","old_text","end_text","text_length","length","substring","text_array","toLowerCase","split","out_array","letterNumber","reverse","c","match","roman","roman_end","hiragana","removed","charAt","match_hiragana_2","match_hiragana_3","new_text","answers","includes","console","log","InfoBox","values","HelpBox","meanings","readings","ReviewPage","num_reviews","incrementReview","toggleHelp","current_leech","first_leech","view_help","queueLeech","leech_index","uuid","then","next_leech","endReview","forEach","element","reading","meaning","characters","App","checkAuthentication","existing_key","page","GetUsername","remove","GetLeeches","first_leech_id","Login","Home","Loading","Review","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ef7a3a40.chunk.js","sourcesContent":["import { Component, React } from 'react';\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkLogin = this.checkLogin.bind(this)\r\n  }\r\n\r\n  checkLogin() {\r\n    var api_key = document.getElementById('api_key').value;\r\n    this.props.checkLogin(api_key);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='login'>\r\n        <div className='login_content'>\r\n          <h1 className='title'>ようこそ!</h1>\r\n          <p className='login_description'>Please enter your API key</p>\r\n          <input type=\"text\" id=\"api_key\" /><br />\r\n          <button onClick={this.checkLogin}>Login</button>\r\n          <p>Get your API key <a href=\"https://www.wanikani.com/settings/personal_access_tokens\" target=\"_blank\">here</a></p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginPage","import { Component, React } from 'react';\r\nimport Cookies from 'js-cookie';\r\n\r\nclass ConfigField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        const newValue =  event.target.value;\r\n        this.setDefault(newValue);\r\n        this.props.onChange(newValue);\r\n    }\r\n\r\n    setDefault(value){\r\n        Cookies.set(this.props.cookie, value);\r\n    }\r\n\r\n    getDefault(){\r\n        let value = Cookies.get(this.props.cookie);\r\n\r\n        // Set a cookie if none exists\r\n        if(!value){\r\n            value = this.props.defaultValue;\r\n            this.setDefault(value);\r\n\r\n        // If value from cookie does not match value from parent, update parent\r\n        } else if(value!==this.props.defaultValue){\r\n            this.props.onChange(value);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    render(){\r\n        const title = this.props.title;\r\n        const defaultValue = this.getDefault();\r\n\r\n        return(\r\n            <div>\r\n                <p>{title}</p>\r\n                <input type=\"text\" defaultValue={defaultValue} onChange={this.handleChange} /><br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass NumberConfigField extends ConfigField {\r\n    handleChange(event){\r\n        let targetVal = event.target.value;\r\n        \r\n        super.handleChange(event);\r\n    }\r\n}\r\n\r\nexport {ConfigField, NumberConfigField};\r\n","import { Component, React } from 'react';\r\nimport {NumberConfigField} from '../Widgets/ConfigField';\r\nimport {getGreeting} from '../Widgets/Messages'\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n        this.startReview = this.startReview.bind(this);\r\n        this.updateDaysToReview = this.updateDaysToReview.bind(this);\r\n        this.updatePercentThreshold =  this.updatePercentThreshold.bind(this);\r\n        this.greeting = getGreeting();\r\n\r\n        this.state = {\r\n            days_to_review: \"30\",\r\n            percent_threshold: \"85\",\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.props.logout();\r\n    }\r\n\r\n    startReview() {\r\n        const percent = this.state.percent_threshold;\r\n        const days = this.state.days_to_review;\r\n\r\n        this.props.start(percent, days)\r\n    }\r\n\r\n    updateDaysToReview(value){\r\n        this.setState({days_to_review: value});\r\n    }\r\n\r\n    updatePercentThreshold(value){\r\n        this.setState({percent_threshold: value});\r\n    }\r\n\r\n    render() {\r\n        const name = this.props.name;\r\n        const greeting = this.greeting;\r\n\r\n        const days_to_review = this.state.days_to_review;\r\n        const percent_threshold = this.state.percent_threshold;\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <p>{greeting}, {name}</p>\r\n                    <button onClick={this.logout}>Logout</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <h1>Review Settings</h1>\r\n                    <NumberConfigField title='Days to review' description='days' defaultValue={days_to_review} cookie='review-days' onChange={this.updateDaysToReview} />\r\n                    <NumberConfigField title='Percent Threshold' description='days' defaultValue={percent_threshold} cookie='review-percent' onChange={this.updatePercentThreshold}/>\r\n                    <button onClick={this.startReview}>Review</button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage","function getGreeting(){\r\n    const d = new Date();\r\n    const hours = d.getHours();\r\n  \r\n    var greeting =''\r\n  \r\n      if(hours < 3 || hours > 22){\r\n        greeting = \"おやすみんさい\";\r\n      } else if (hours < 12){\r\n        greeting = \"おはようございます\";\r\n      } else if (hours < 18){\r\n        greeting = \"こんにちは\";\r\n      } else {\r\n        greeting = \"こんばんは\"\r\n      }\r\n  \r\n      return greeting;\r\n  }\r\n\r\nexport {getGreeting};\r\n","function LoadingPage(){\r\n    return(\r\n        <div>\r\n            <p>Loading!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingPage\r\n","const API_ROOT = 'https://api.wanikani.com/v2/';\r\n\r\nfunction makeUrl(url_end, params) {\r\n    let url = API_ROOT + url_end;\r\n\r\n    if (params) {\r\n        url += '?' + objectToQueryString(params);\r\n    }\r\n\r\n    return url\r\n}\r\n\r\nfunction objectToQueryString(obj) {\r\n    return Object.keys(obj).map(key => key + '=' + obj[key]).join('&');\r\n}\r\n\r\n\r\nfunction makeAuthorization(token) {\r\n    return 'Bearer ' + token\r\n}\r\n\r\nasync function getRequestRecursive(url, token, cb, previous_data = null) {\r\n    let response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: { 'Authorization': makeAuthorization(token) }\r\n    });\r\n\r\n    if (!response.ok) {\r\n        return\r\n    } else {\r\n        let json = await response.json();\r\n        let pages = json.pages;\r\n        let data = json.data;\r\n\r\n        let next_page = null;\r\n\r\n        if (pages) {\r\n            next_page = pages.next_url;\r\n\r\n            if (previous_data) {\r\n                data = previous_data.concat(data);\r\n            }\r\n\r\n        }\r\n\r\n        if (next_page) {\r\n            return getRequestRecursive(next_page, token, cb, data);\r\n        } else {\r\n            return data;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getRecursivePromise(url_end, params, token, cb) {\r\n    let url = makeUrl(url_end, params);\r\n    const fetchPromise = getRequestRecursive(url, token, cb);\r\n\r\n    return fetchPromise;\r\n}\r\n\r\nfunction getFetchPromise(url_end, params, token) {\r\n    const url = makeUrl(url_end, params);\r\n    const fetchPromise = fetch(url, {\r\n        method: 'GET',\r\n        headers: { 'Authorization': makeAuthorization(token) }\r\n    })\r\n\r\n    return fetchPromise;\r\n}\r\n\r\nexport { getRecursivePromise, getFetchPromise };\r\n","import {getFetchPromise, getRecursivePromise} from './Requests'\r\n\r\nasync function GetUsername(apiToken) {\r\n    if (apiToken === 'test') {\r\n        return 'TestUser';\r\n    }\r\n\r\n    const url_end = 'user';\r\n    let response = await getFetchPromise(url_end, null, apiToken);\r\n\r\n    if (!response.ok) {\r\n        return ''\r\n    } else {\r\n        let json = await response.json();\r\n        let data = json.data.username;\r\n        return data;\r\n    }\r\n}\r\n\r\nfunction compareLeeches( a, b ) {\r\n    if ( a.ranker < b.ranker ){\r\n      return -1;\r\n    }\r\n    if ( a.ranker > b.ranker ){\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\nasync function GetLeeches(apiToken, percent, days) {\r\n    if (apiToken === 'test') {\r\n        return([[0, 0], [1, 1], [2, 2]]);\r\n    }\r\n\r\n    const url_end = 'review_statistics';\r\n\r\n    let target_date = new Date();\r\n    target_date.setTime(target_date.getTime() - (1000 * 60 * 60 * 24) * days);\r\n\r\n    const arg_date = target_date.toISOString();\r\n\r\n    var params = {\r\n        updated_after: arg_date,\r\n        subject_types: \"vocabulary\",\r\n        percentages_less_than: percent,\r\n    };\r\n\r\n    let response = await getRecursivePromise(url_end, params, apiToken);\r\n    let leeches = [];\r\n\r\n    for (const review_number in response) {\r\n        const review_data = response[review_number].data;\r\n        const current_meaning = review_data.meaning_current_streak;\r\n        const current_reading = review_data.reading_current_streak;\r\n\r\n        if(current_meaning > 3 && current_reading > 3){\r\n            continue;\r\n        } else {\r\n            const current_percent = review_data.percentage_correct;\r\n            const ranker = Math.min(current_reading, current_meaning) * 100 + current_percent;\r\n            const leech = {ranker: ranker, id: review_data.subject_id};\r\n            leeches.push(leech);\r\n        }\r\n\r\n    }\r\n\r\n    leeches.sort( compareLeeches );\r\n\r\n    return leeches;\r\n}\r\n\r\nasync function GetSubject(apiToken, review_id) {\r\n    if (apiToken === 'test') {\r\n        return 'TestUser';\r\n    }\r\n\r\n    const url_end = 'subjects/' + review_id;\r\n    let response = await getFetchPromise(url_end, null, apiToken);\r\n\r\n    if (!response.ok) {\r\n        return ''\r\n    } else {\r\n        let json = await response.json();\r\n        let data = json.data;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport { GetUsername, GetLeeches, GetSubject };\r\n","const PAGES = {\r\n    login: 'login',\r\n    config: 'config',\r\n    loading: 'loading',\r\n    reviewing: 'reviewing'\r\n  }\r\n\r\n  export default PAGES\r\n  ","import { Component, React } from 'react';\r\n\r\nvar one_character_hiragana = {\r\n    'a': 'あ',\r\n    'i': 'い',\r\n    'u': 'う',\r\n    'e': 'え',\r\n    'o': 'お',\r\n}\r\n\r\nvar two_character_hiragana = {\r\n    'ka': 'か',\r\n    'ki': 'き',\r\n    'ku': 'く',\r\n    'ke': 'け',\r\n    'ko': 'こ',\r\n    'sa': 'さ',\r\n    'su': 'す',\r\n    'se': 'せ',\r\n    'so': 'そ',\r\n    'ta': 'た',\r\n    'te': 'て',\r\n    'to': 'と',\r\n    'na': 'な',\r\n    'ni': 'に',\r\n    'nu': 'ぬ',\r\n    'ne': 'ね',\r\n    'no': 'の',\r\n    'ha': 'は',\r\n    'hi': 'ひ',\r\n    'fu': 'ふ',\r\n    'he': 'へ',\r\n    'ho': 'ほ',\r\n    'ma': 'ま',\r\n    'mi': 'み',\r\n    'mu': 'む',\r\n    'me': 'め',\r\n    'mo': 'も',\r\n    'ya': 'や',\r\n    'yu': 'ゆ',\r\n    'yo': 'よ',\r\n    'ra': 'ら',\r\n    'ri': 'り',\r\n    'ru': 'る',\r\n    're': 'れ',\r\n    'ro': 'ろ',\r\n    'wa': 'わ',\r\n    'wo': 'を',\r\n    'nn': 'ん',\r\n    'ga': 'が',\r\n    'gi': 'ぐ',\r\n    'gu': 'ぐ',\r\n    'ge': 'げ',\r\n    'go': 'ご',\r\n    'za': 'ざ',\r\n    'ji': 'じ',\r\n    'zu': 'ず',\r\n    'ze': 'ぜ',\r\n    'zo': 'ぞ',\r\n    'da': 'だ',\r\n    'de': 'で',\r\n    'do': 'ど',\r\n    'ba': 'ば',\r\n    'bi': 'び',\r\n    'bu': 'ぶ',\r\n    'be': 'べ',\r\n    'bo': 'ぼ',\r\n    'pa': 'ぱ',\r\n    'pi': 'ぴ',\r\n    'pu': 'ぷ',\r\n    'pe': 'ぺ',\r\n    'po': 'ぽ',\r\n    'ja': 'じゃ',\r\n    'ju': 'じゅ',\r\n    'jo': 'じょ',\r\n}\r\n\r\nvar three_character_hiragana = {\r\n    'kya': 'きゃ',\r\n    'kyu': 'きゅ',\r\n    'kyo': 'きょ',\r\n    'sha': 'しゃ',\r\n    'shu': 'しゅ',\r\n    'sho': 'しょ',\r\n    'cha': 'ちゃ',\r\n    'chu': 'ちゅ',\r\n    'cho': 'ちょ',\r\n    'nya': 'にゃ',\r\n    'nyu': 'にゅ',\r\n    'nyo': 'にょ',\r\n    'hya': 'ひゃ',\r\n    'hyu': 'ひゅ',\r\n    'hyo': 'ひょ',\r\n    'mya': 'みゃ',\r\n    'myu': 'みゅ',\r\n    'myo': 'みょ',\r\n    'rya': 'りゃ',\r\n    'ryu': 'りゅ',\r\n    'ryo': 'りょ',\r\n    'shi': 'し',\r\n    'chi': 'ち',\r\n    'dji': 'ぢ',\r\n    'dzu': 'づ',\r\n    'gya': 'ぎゃ',\r\n    'gyu': 'ぎゅ',\r\n    'gyo': 'ぎょ',\r\n    'bya': 'びゃ',\r\n    'byu': 'びゅ',\r\n    'byo': 'びょ',\r\n    'pya': 'ぴゃ',\r\n    'pyu': 'ぴゅ',\r\n    'pyo': 'ぴょ',\r\n    'tsu': 'つ',\r\n}\r\n\r\nfunction match_hiragana_1(roman){\r\n    if(roman in one_character_hiragana){\r\n        let hiragana = one_character_hiragana[roman];\r\n        return[hiragana, 1];\r\n    } else {\r\n        return['', 0];\r\n    }\r\n}\r\n\r\nfunction match_hiragana_2(roman){\r\n    if(roman in two_character_hiragana){\r\n        let hiragana = two_character_hiragana[roman];\r\n        return [hiragana, 2];\r\n    } else {\r\n        const first_char = roman.charAt(0);\r\n        const second_char = roman.charAt(1);\r\n\r\n        if(first_char === second_char){\r\n            return['っ', 2];\r\n        }\r\n        return['', 0];\r\n    }\r\n}\r\n\r\nfunction match_hiragana_3(roman){\r\n    if(roman in three_character_hiragana){\r\n        let hiragana = three_character_hiragana[roman];\r\n        return [hiragana, 3];\r\n    } else {\r\n        return['', 0]; \r\n    }\r\n}\r\n\r\nclass JapaneseInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.state = {\r\n            inputValue: ''\r\n        };\r\n    }\r\n\r\n    handleInput(event) {\r\n        let old_text = event.target.value;\r\n        let end_text = old_text;\r\n        let text_length = old_text.length;\r\n\r\n        // Last three letters in string\r\n        if (text_length > 3) {\r\n            end_text = end_text.substring(text_length - 3)\r\n        }\r\n\r\n        end_text = end_text.toLowerCase();\r\n        let text_array = end_text.split(\"\");\r\n        let out_array = [];\r\n\r\n        const letterNumber = /^[a-z]+$/;\r\n        for (const c of text_array.reverse()) {\r\n            if (!c.match(letterNumber)) {\r\n                break;\r\n            }\r\n\r\n            out_array.push(c);\r\n        }\r\n        let roman_end = out_array.reverse().join(\"\");\r\n\r\n        let hiragana = ''\r\n        let removed = 0;\r\n\r\n        switch (roman_end.length) {\r\n            case 0:\r\n                break;\r\n            case 1:\r\n                [hiragana, removed] = match_hiragana_1(roman_end);\r\n                break;\r\n            case 2:\r\n                [hiragana, removed] = match_hiragana_2(roman_end);\r\n                break;\r\n            case 3:\r\n                [hiragana, removed] = match_hiragana_3(roman_end);\r\n                break;\r\n        }\r\n\r\n        if(removed){\r\n            text_length = old_text.length;\r\n            var new_text = old_text.substring(0, text_length - removed);\r\n            new_text += hiragana;\r\n            \r\n        } else {\r\n            var new_text = old_text;\r\n        }\r\n        \r\n        if(this.props.answers.includes(new_text)){\r\n            console.log(\"yay!\");\r\n        }\r\n\r\n        this.setState({\r\n            inputValue: new_text\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input name=\"ime\" type=\"text\" onChange={this.handleInput} value={this.state.inputValue} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport {JapaneseInput}\r\n","import { Component, React } from 'react';\r\nimport { GetSubject } from '../Wanikani'\r\nimport { JapaneseInput } from '../Widgets/HiraganaIme'\r\n\r\nfunction InfoBox(props) {\r\n    let values = props.values;\r\n    let description = props.description\r\n\r\n    if (values.length > 1) {\r\n        description += 's';\r\n    }\r\n\r\n    values = values.join(', ')\r\n\r\n    return (\r\n        <div>\r\n            <p>{description}: {values}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction HelpBox(props) {\r\n    let meanings = props.meanings.join(\", \");\r\n    console.log(meanings);\r\n    return (\r\n        <div>\r\n            <InfoBox values={props.readings} description={\"Reading\"} />\r\n            <InfoBox values={props.meanings} description={\"Meaning\"} />\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ReviewPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.num_reviews = this.props.leeches.length;\r\n        this.incrementReview = this.incrementReview.bind(this);\r\n        this.toggleHelp = this.toggleHelp.bind(this);\r\n        this.review_number = 1;\r\n        this.state = { current_leech: this.props.first_leech, view_help: false };\r\n        this.queueLeech(1);\r\n    }\r\n\r\n    queueLeech(leech_index) {\r\n        if (leech_index >= this.num_reviews) {\r\n            return;\r\n        }\r\n        const uuid = this.props.leeches[leech_index].id;\r\n        GetSubject(this.props.api_key, uuid).then((next_leech) => {\r\n            this.next_leech = next_leech;\r\n        })\r\n    }\r\n\r\n    incrementReview() {\r\n        if (this.review_number >= this.num_reviews) {\r\n            this.props.endReview();\r\n            return;\r\n        }\r\n        this.review_number += 1;\r\n        this.setState({ current_leech: this.next_leech, view_help: false });\r\n        this.queueLeech(this.review_number);\r\n    }\r\n\r\n    toggleHelp() {\r\n        this.setState({ view_help: true });\r\n    }\r\n\r\n    render() {\r\n        let readings = []\r\n        let meanings = []\r\n        let current_leech = this.state.current_leech;\r\n\r\n        current_leech.readings.forEach(element => readings.push(element.reading));\r\n        current_leech.meanings.forEach(element => meanings.push(element.meaning));\r\n\r\n        return (\r\n            <div>\r\n                <p>{this.review_number}/{this.num_reviews}</p>\r\n                <p>{this.state.current_leech.characters}</p>\r\n                <button onClick={this.incrementReview}>Next Review</button>\r\n                <JapaneseInput answers={readings} />\r\n                <button onClick={this.toggleHelp}>Help</button>\r\n                {this.state.view_help &&\r\n                    <HelpBox readings={readings} meanings={meanings} />\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReviewPage\r\n","import './App.css';\r\n\r\nimport LoginPage from \"./Pages/Login\";\r\nimport HomePage from './Pages/Home';\r\nimport LoadingPage from './Pages/Loading'\r\n\r\nimport Cookies from 'js-cookie';\r\nimport { Component, React } from 'react';\r\nimport { GetUsername, GetLeeches, GetSubject } from './Wanikani'\r\nimport PAGES from './Pages';\r\nimport ReviewPage from './Pages/Review';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkAuthentication = this.checkAuthentication.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.startReview = this.startReview.bind(this);\r\n    this.endReview = this.endReview.bind(this);\r\n    this.leeches = null;\r\n    this.first_leech = null;\r\n\r\n    const existing_key = Cookies.get('api-key');\r\n    let page = PAGES.login;\r\n    let username = ''\r\n    if (existing_key) {\r\n      page = PAGES.config;\r\n      username = Cookies.get('username');\r\n    }\r\n\r\n    this.state = { page: page, username: username, api_key: existing_key };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    // Validate existing API key if any\r\n    if (this.state.page === PAGES.config) {\r\n      let existing_key = Cookies.get('api-key');\r\n      this.checkAuthentication(existing_key);\r\n    }\r\n\r\n  }\r\n\r\n  checkAuthentication(api_key) {\r\n    GetUsername(api_key).then((username) => {\r\n      if (username) {\r\n        this.setState({ username: username, page: PAGES.config, api_key: api_key });\r\n        Cookies.set('api-key', api_key);\r\n        Cookies.set('username', username);\r\n      } else if (!this.state.page === PAGES.login) {\r\n        this.logout();\r\n      }\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    this.setState({ page: PAGES.login, username: '' });\r\n    Cookies.remove('api-key');\r\n  }\r\n\r\n  startReview(percent, days) {\r\n    this.setState({page: PAGES.loading});\r\n\r\n    GetLeeches(this.state.api_key, percent, days).then((leeches) => {\r\n      this.leeches = leeches;\r\n      const first_leech_id = leeches[0].id;\r\n      GetSubject(this.state.api_key, first_leech_id).then(first_leech => {\r\n        this.first_leech = first_leech;\r\n        this.setState({page: PAGES.reviewing});\r\n      })\r\n    })\r\n  }\r\n\r\n  endReview() {\r\n    this.setState({page: PAGES.config});\r\n  }\r\n\r\n  render() {\r\n    switch (this.state.page) {\r\n      case PAGES.login:\r\n        return <LoginPage checkLogin={this.checkAuthentication} />\r\n      case PAGES.config:\r\n        return <HomePage logout={this.logout} name={this.state.username} start={this.startReview} />\r\n      case PAGES.loading:\r\n        return <LoadingPage />\r\n      case PAGES.reviewing:\r\n        return <ReviewPage leeches={this.leeches} first_leech={this.first_leech} api_key={this.state.api_key} endReview={this.endReview} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}